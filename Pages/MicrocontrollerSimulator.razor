@inject IJSRuntime js
@inject ISnackbar Snackbar

@using mcsim.Data.MicrocontrollerSimulator.Components

<PageTitle>Microcontroller Simulator @(file is not null ? " - " + file.Name : "")</PageTitle>

    <h3>Microcontroller Simulator</h3>
    <div class="msim">
        @if (this.DialVisible)
    {
        <Dialog HeaderText="Dial Knob" style="height: 18rem; width: 13rem;" CloseEvent="DialClose">
            <div class="knob" id="knob"></div>
            <div id="val"></div>
        </Dialog>
    }
    @if (this.SSDVisible)
    {
        <Dialog HeaderText="Seven Segment Display" style="height: 18rem; width: 13rem;top: 26rem;" CloseEvent="SSDClose">
            <div id="dpl6"></div>
        </Dialog>
    }
    <MudGrid>
        <MudItem>
            <MudStack Row="true">
                <MudFileUpload T="IBrowserFile" Accept=".c" FilesChanged="UploadCode" MaximumFileCount="100">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@context">
                            Open
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="RunCode">@runBtn</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!this.continueEnabled)" @onclick="Continue">Continue</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!this.stepEnabled)" @onclick="Step">Step</MudButton>
            </MudStack>
        </MudItem>
        <MudSpacer />
        <MudItem>
            <MudTooltip Text="Execution Speed" Placement="Placement.Top">
                <MudSlider Size="Size.Medium" Disabled="ipsDisabled" TickMarks="true" Min="1" Max="5" @bind-Value="@Ips" TickMarkLabels="@ipsLevels"></MudSlider>
            </MudTooltip>
        </MudItem>
        <MudItem>
            <p><strong>@timeSpan.ToString(@"hh\:mm\:ss\.ffff")</strong></p>
        </MudItem>
    </MudGrid>
    <MudGrid style="margin-top: 2em">
        <MudItem>
            @for (int i = 0; i <= 7; i++)
            {
                @if (this.PushButton)
                {
                    <AInput ID="@($"A{i}")" Label="@($"A{i} ")" @ref="A" PushButton="true" Hold="Hold" Release="Release"></AInput>
                }
                else
                {
                    <AInput ID="@($"A{i}")" Label="@($"A{i} ")" @ref="A" AClick="AClick"></AInput>
                }
            }
            <MudCheckBox @bind-Checked="@PushButton" Label="Push Button" Disabled="pushButtonDisabled"></MudCheckBox>
            <p><strong>@AValHex</strong></p>
            <p><strong>@AValDec</strong></p>
        </MudItem>
        <MudItem id="parent">
            <div id="editor" style="top: 1rem;"></div>
        </MudItem>
        <MudItem>
            @for (int i = 0; i <= 7; i++)
            {
                @if (this.SoundOn)
                {
                    <AudioOutput ID="@($"audio{i}")" Label="@($"B{i} ")" Src="@($"audio/audio{i}.wav")" @ref="BAudio" />
                }
                else
                {
                    <OutputB ID="@($"B{i}")" Label="@($"B{i}")" @ref="B"></OutputB>
                }
            }
            <MudCheckBox @bind-Checked="@SoundOn" Label="Sound"></MudCheckBox>
            <p><strong>@BValHex</strong></p>
            <p><strong>@BValDec</strong></p>
        </MudItem>
        <MudItem>
            <MudCheckBox @bind-Checked="@DialVisible" Label="Show Dial" @oninput="DialVisibilityChanged"></MudCheckBox>
        </MudItem>
        <MudItem>
            <MudCheckBox T="bool" @bind-Checked="NestedInterruptsEnabled" id="NestedInterruptsEnabled" Label="Enable Nested Interrupts"></MudCheckBox>
        </MudItem>
        <MudSpacer />
        <MudItem>
            <MudButton Color="Color.Tertiary" Disabled="formatDisabled" Variant="Variant.Outlined" @onclick="FormatCode">Format</MudButton>
        </MudItem>
        <MudItem>
            <MudCheckBox @bind-Checked="@SSDVisible" Label="Show Seven Segment Display" @oninput="SSDVisibilityChanged"></MudCheckBox>
        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem>
            <label>Symbols</label>
            <div class="tbl">
                <table class="table table-responsive table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Value</th>
                            <th>Address</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (KeyValuePair<string, (string address, string value)> kv in this.symbols)
                        {
                            <tr>
                                <td>@kv.Key</td>
                                <td>@kv.Value.value</td>
                                <td>@kv.Value.address</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </MudItem>
        <MudItem id="term" style="width: 50%">
            <MudGrid>
                <MudItem>
                    <label>Output</label>
                </MudItem>
                <MudSpacer />
                <MudItem>
                    <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" @onclick="ClearTerminal">Clear</MudButton>
                </MudItem>
            </MudGrid>
            <Xterm @ref="console" Options="consoleOptions" AddonIds="_addonIds" OnFirstRender="OnFirstRender" />
        </MudItem>
        <MudItem id="testVectorEditorParent" style="width: 25%;">
            <MudCheckBox T="bool" Checked="TestVectorEnabled" id="TestVectorEnabled" Label="Enable Test Vectors" @oninput="ToggleTestVector"></MudCheckBox>
            @if (this.TestVectorEnabled)
            {
                <p>
                    <div>Test Vectors</div>
                    <div id="testVectorEditor" style="top: 6rem;"></div>
                </p>
            }
        </MudItem>
        <MudItem>
            @if (this.exportDiagram)
            {
                <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" @onclick="ExportTimingDiagram">Export Diagram</MudButton>
            }
            <PlotlyChart Id="chart" @bind-Config="config" @bind-Layout="layout" @bind-Data="chartData" @ref="chart" />
        </MudItem>
    </MudGrid>
    <style>
        #chart {
            display: @(this.exportDiagram ? "block" : "none");
        }
    </style>
</div>
@*
    <script type="module" src="smb_main.js"></script>
    <script type="module" src="smb.js"></script>
    <script type="module" src="msim_main.js"></script>
    <script type="module" src="msim.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.21.0/ace.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.21.0/ext-language_tools.min.js"></script>

*@
@code {
}
